/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */



namespace RosSharp.RosBridgeClient.MessageTypes.Control
{
    public class JointTolerance : Message
    {
        public const string RosMessageName = "control_msgs/JointTolerance";

        //  The tolerances specify the amount the position, velocity, and
        //  accelerations can vary from the setpoints.  For example, in the case
        //  of trajectory control, when the actual position varies beyond
        //  (desired position + position tolerance), the trajectory goal may
        //  abort.
        // 
        //  There are two special values for tolerances:
        //   * 0 - The tolerance is unspecified and will remain at whatever the default is
        //   * -1 - The tolerance is "erased".  If there was a default, the joint will be
        //          allowed to move without restriction.
        public string name { get; set; }
        public double position { get; set; }
        //  in radians or meters (for a revolute or prismatic joint, respectively)
        public double velocity { get; set; }
        //  in rad/sec or m/sec
        public double acceleration { get; set; }
        //  in rad/sec^2 or m/sec^2

        public JointTolerance()
        {
            this.name = "";
            this.position = 0.0;
            this.velocity = 0.0;
            this.acceleration = 0.0;
        }

        public JointTolerance(string name, double position, double velocity, double acceleration)
        {
            this.name = name;
            this.position = position;
            this.velocity = velocity;
            this.acceleration = acceleration;
        }
    }
}
