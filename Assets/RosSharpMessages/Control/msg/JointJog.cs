/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */



using RosSharp.RosBridgeClient.MessageTypes.Std;

namespace RosSharp.RosBridgeClient.MessageTypes.Control
{
    public class JointJog : Message
    {
        public const string RosMessageName = "control_msgs/JointJog";

        //  Used in time-stamping the message.
        public Header header { get; set; }
        //  Name list of the joints. You don't need to specify all joints of the
        //  robot. Joint names are case-sensitive.
        public string[] joint_names { get; set; }
        //  A position command to the joints listed in joint_names.
        //  The order must be identical.
        //  Units are meters or radians.
        //  If displacements and velocities are filled, a profiled motion is requested.
        public double[] displacements { get; set; }
        //  or position_deltas
        //  A velocity command to the joints listed in joint_names.
        //  The order must be identical.
        //  Units are m/s or rad/s.
        //  If displacements and velocities are filled, a profiled motion is requested.
        public double[] velocities { get; set; }
        public double duration { get; set; }

        public JointJog()
        {
            this.header = new Header();
            this.joint_names = new string[0];
            this.displacements = new double[0];
            this.velocities = new double[0];
            this.duration = 0.0;
        }

        public JointJog(Header header, string[] joint_names, double[] displacements, double[] velocities, double duration)
        {
            this.header = header;
            this.joint_names = joint_names;
            this.displacements = displacements;
            this.velocities = velocities;
            this.duration = duration;
        }
    }
}
