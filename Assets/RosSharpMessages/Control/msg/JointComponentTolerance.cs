/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */



namespace RosSharp.RosBridgeClient.MessageTypes.Control
{
    public class JointComponentTolerance : Message
    {
        public const string RosMessageName = "control_msgs/JointComponentTolerance";

        //  Version of JointTolerance.msg with added component field for joints with multiple degrees of freedom
        //  The difference between two MultiDOFJointTrajectoryPoint cannot be represented as a single number,
        //  hence we use the component field to represent how to calculate the difference in a way that can
        //  be represented as a single number.
        //  Since each joint has multiple degrees of freedom,
        //  there can be multiple tolerances for each joint, each looking
        //  at different components.
        //  If the component is X_AXIS, Y_AXIS, or Z_AXIS, then the tolerance
        //  is only applied for the specific axis.
        //  However, if the component is TRANSLATION, then the tolerance is for
        //  the overall Euclidean distance.
        //  For these components, the units are meters, meters/sec and meters/sec^2.
        //  Z_AXIS is only valid with a floating joint, not planar.
        //  If the component is ROTATION the tolerance is measured in
        //  radians, radians/sec and radians/sec^2, computed
        //  between the difference in quaternions.
        public const ushort X_AXIS = 1;
        public const ushort Y_AXIS = 2;
        public const ushort Z_AXIS = 3;
        public const ushort TRANSLATION = 4;
        public const ushort ROTATION = 5;
        public string joint_name { get; set; }
        public ushort component { get; set; }
        public double position { get; set; }
        public double velocity { get; set; }
        public double acceleration { get; set; }

        public JointComponentTolerance()
        {
            this.joint_name = "";
            this.component = 0;
            this.position = 0.0;
            this.velocity = 0.0;
            this.acceleration = 0.0;
        }

        public JointComponentTolerance(string joint_name, ushort component, double position, double velocity, double acceleration)
        {
            this.joint_name = joint_name;
            this.component = component;
            this.position = position;
            this.velocity = velocity;
            this.acceleration = acceleration;
        }
    }
}
